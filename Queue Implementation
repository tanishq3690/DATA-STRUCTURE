#include<stdio.h>
#include<stdlib.h>

//Structure for creating queue.
struct Queue
{
    int size;
    int f;
    int r;
    int* arr;
};

//Is Full condition for queue.
int isFull(struct Queue *q)
{
if(q->r==q->size-1)
{
    return 1;
}
return 0;
}

//Is empty condition for queue
int isEmpty(struct Queue *q)
{
if(q->r==q->f)
{
    return 1;
}
return 0;
}



//Enqueue condition for queue.
void enqueue(struct Queue *q,int val)
{
    if(isFull(q)){
        printf("\nQueue overflow ");
}
        else {
            q->r++;
        q->arr[q->r]=val;
        printf("Enqued element: %d\n", val);
        }
}

int dequeue(struct Queue *q)
{
    int a=-1;
    if(isEmpty(q)){
        printf("\nQueue is empty ");
}
        else {
            q->f++;
       a= q->arr[q->f];
        }
        return a;
    }

int main(){
    struct Queue q;
    q.size=10;
    q.f = q.r = 0;
    q.arr = (int*) malloc(q.size*sizeof(int));

enqueue(&q,12);
enqueue(&q,15);

printf("\nDequeuing Element %d",dequeue(&q));
printf("\nDequeuing Element %d",dequeue(&q));
return 0;
}
